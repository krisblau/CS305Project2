#BlueJ class context
comment0.target=SenderTransport
comment0.text=\n\ A\ class\ which\ represents\ the\ receiver\ transport\ layer\n\ \n\ Arguements\:\ {"input\ file","average\ delay",\ "prob.\ loss",\ "prob.\ corruption",\ "window\ size","protocol\ type","DEBUG"}\n\ test\ run\ string\:\ {"test.txt",\ "5",\ "0",\ ".20","0","0","0"}\n
comment1.params=nl
comment1.target=SenderTransport(NetworkLayer)
comment10.params=pkt
comment10.target=void\ gbnReceive(Packet)
comment10.text=\n\ Receive\ function\ for\ Go-Back-N\n\ \n\ @param\ pkt\ Incoming\ packet\n
comment11.params=
comment11.target=void\ gbnResend()
comment11.text=\n\ Resends\ all\ packets\ in\ the\ window\ after\ the\ last\ received\ ack\n
comment12.params=msg
comment12.target=void\ tcp(Message)
comment12.text=\n\ Works\ much\ the\ same\ way\ as\ gbn\ as\ far\ as\ sending.\ Packet\ is\ simply\ created\ and\ sent\ on.\ \n
comment13.params=pkt
comment13.target=void\ tcpReceive(Packet)
comment13.text=\n\ Receive\ function\ for\ TCP\n\ \n\ @param\ pkt\ Packet\ coming\ in\ from\ network.\n
comment14.params=
comment14.target=void\ tcpResend()
comment15.params=
comment15.target=void\ startTimer()
comment15.text=\n\ Function\ to\ start\ timer\ ensuring\ that\ a\ timer\ is\ not\ already\ running.\n
comment16.params=
comment16.target=void\ stopTimer()
comment16.text=\n\ Function\ to\ stop\ timer\ ensuring\ that\ a\ timer\ is\ not\ already\ running.\n
comment2.params=
comment2.target=void\ initialize()
comment2.text=\n\ This\ routine\ will\ be\ called\ once,\ before\ any\ of\ your\ other\ sender\ routines\ are\ called.\ It\ can\ be\ used\ to\ do\ any\ required\ initialization\n
comment3.params=msg
comment3.target=void\ sendMessage(Message)
comment3.text=\n\ Function\ called\ by\ simulation\ to\ send\ the\ read\ message.\n\ Sends\ the\ message\ to\ the\ correct\ protocol.\n\ \n\ @param\ Msg\ Message\ object\ that\ holds\ the\ message\ to\ be\ sent\ over\ the\ network.\n
comment4.params=pkt
comment4.target=void\ receiveMessage(Packet)
comment4.text=\n\ \ Function\ called\ by\ simulation\n\ \ Sends\ the\ packet\ to\ the\ correct\ protocol\ used\ by\ the\ system.\n\ \ \n\ \ @param\ pkt\ Packet\ object\ that\ is\ the\ incoming\ packet.\n
comment5.params=
comment5.target=void\ timerExpired()
comment5.text=\n\ Function\ called\ by\ simulation\ on\ timeout.\n\ Selects\ the\ correct\ resend\ protocol.\n
comment6.params=tl
comment6.target=void\ setTimeLine(Timeline)
comment7.params=n
comment7.target=void\ setWindowSize(int)
comment8.params=n
comment8.target=void\ setProtocol(int)
comment9.params=msg
comment9.target=void\ gbn(Message)
comment9.text=\n\ Send\ function\ for\ Go-Back-N\n\ \n\ @param\ msg\ Message\ to\ be\ sent\ coming\ from\ the\ Network\ Simulator\n
numComments=17
